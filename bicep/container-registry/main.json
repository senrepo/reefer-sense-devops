{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "1562242702384656637"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "containerRegistryName": {
      "type": "string",
      "defaultValue": "acrreeferdev",
      "metadata": {
        "description": "Container Registry Name"
      }
    },
    "registryPolicies": {
      "type": "object",
      "defaultValue": {
        "adminUserEnabled": true,
        "quarantinePolicy": {
          "status": "disabled"
        },
        "trustPolicy": {
          "type": "Notary",
          "status": "disabled"
        },
        "retentionPolicy": {
          "days": 7,
          "status": "disabled"
        },
        "exportPolicy": {
          "status": "enabled"
        },
        "azureADAuthenticationAsArmPolicy": {
          "status": "enabled"
        },
        "softDeletePolicy": {
          "retentionDays": 7,
          "status": "disabled"
        },
        "encryption": {
          "status": "disabled"
        },
        "publicNetworkAccess": "Enabled",
        "zoneRedundancy": "Disabled"
      },
      "metadata": {
        "description": "Policies configuration for the Container Registry"
      }
    },
    "scopeMaps": {
      "type": "array",
      "defaultValue": [
        {
          "name": "_repositories_admin",
          "description": "Can perform all read, write and delete operations on the registry",
          "actions": [
            "repositories/*/metadata/read",
            "repositories/*/metadata/write",
            "repositories/*/content/read",
            "repositories/*/content/write",
            "repositories/*/content/delete"
          ]
        },
        {
          "name": "_repositories_pull",
          "description": "Can pull any repository of the registry",
          "actions": [
            "repositories/*/content/read"
          ]
        },
        {
          "name": "_repositories_pull_metadata_read",
          "description": "Can perform all read operations on the registry",
          "actions": [
            "repositories/*/content/read",
            "repositories/*/metadata/read"
          ]
        },
        {
          "name": "_repositories_push",
          "description": "Can push to any repository of the registry",
          "actions": [
            "repositories/*/content/read",
            "repositories/*/content/write"
          ]
        },
        {
          "name": "_repositories_push_metadata_write",
          "description": "Can perform all read and write operations on the registry",
          "actions": [
            "repositories/*/metadata/read",
            "repositories/*/metadata/write",
            "repositories/*/content/read",
            "repositories/*/content/write"
          ]
        }
      ],
      "metadata": {
        "description": "List of scope maps to create for the registry"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2025-05-01-preview",
      "name": "[parameters('containerRegistryName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Basic",
        "tier": "Basic"
      },
      "properties": {
        "adminUserEnabled": "[parameters('registryPolicies').adminUserEnabled]",
        "policies": {
          "quarantinePolicy": "[parameters('registryPolicies').quarantinePolicy]",
          "trustPolicy": "[parameters('registryPolicies').trustPolicy]",
          "retentionPolicy": "[parameters('registryPolicies').retentionPolicy]",
          "exportPolicy": "[parameters('registryPolicies').exportPolicy]",
          "azureADAuthenticationAsArmPolicy": "[parameters('registryPolicies').azureADAuthenticationAsArmPolicy]",
          "softDeletePolicy": "[parameters('registryPolicies').softDeletePolicy]"
        },
        "encryption": "[parameters('registryPolicies').encryption]",
        "publicNetworkAccess": "[parameters('registryPolicies').publicNetworkAccess]",
        "zoneRedundancy": "[parameters('registryPolicies').zoneRedundancy]"
      }
    },
    {
      "copy": {
        "name": "registryScopeMaps",
        "count": "[length(parameters('scopeMaps'))]",
        "mode": "serial",
        "batchSize": 1
      },
      "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
      "apiVersion": "2025-05-01-preview",
      "name": "[format('{0}/{1}', parameters('containerRegistryName'), parameters('scopeMaps')[copyIndex()].name)]",
      "properties": {
        "description": "[parameters('scopeMaps')[copyIndex()].description]",
        "actions": "[parameters('scopeMaps')[copyIndex()].actions]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName'))]"
      ]
    }
  ]
}