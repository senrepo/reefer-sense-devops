{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "12928283808987963474"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "containerRegistryName": {
      "type": "string",
      "defaultValue": "acrreeferdev",
      "metadata": {
        "description": "Container Registry Name"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2025-05-01-preview",
      "name": "[parameters('containerRegistryName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Basic",
        "tier": "Basic"
      },
      "properties": {
        "adminUserEnabled": true,
        "policies": {
          "quarantinePolicy": {
            "status": "disabled"
          },
          "trustPolicy": {
            "type": "Notary",
            "status": "disabled"
          },
          "retentionPolicy": {
            "days": 7,
            "status": "disabled"
          },
          "exportPolicy": {
            "status": "enabled"
          },
          "azureADAuthenticationAsArmPolicy": {
            "status": "enabled"
          },
          "softDeletePolicy": {
            "retentionDays": 7,
            "status": "disabled"
          }
        },
        "encryption": {
          "status": "disabled"
        },
        "dataEndpointEnabled": false,
        "publicNetworkAccess": "Enabled",
        "networkRuleBypassOptions": "AzureServices",
        "networkRuleBypassAllowedForTasks": false,
        "zoneRedundancy": "Disabled",
        "anonymousPullEnabled": false,
        "metadataSearch": "Disabled",
        "roleAssignmentMode": "LegacyRegistryPermissions",
        "autoGeneratedDomainNameLabelScope": "Unsecure"
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
      "apiVersion": "2025-05-01-preview",
      "name": "[format('{0}/{1}', parameters('containerRegistryName'), '_repositories_admin')]",
      "properties": {
        "description": "Can perform all read, write and delete operations on the registry",
        "actions": [
          "repositories/*/metadata/read",
          "repositories/*/metadata/write",
          "repositories/*/content/read",
          "repositories/*/content/write",
          "repositories/*/content/delete"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName'))]"
      ]
    },
    {
      "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
      "apiVersion": "2025-05-01-preview",
      "name": "[format('{0}/{1}', parameters('containerRegistryName'), '_repositories_pull')]",
      "properties": {
        "description": "Can pull any repository of the registry",
        "actions": [
          "repositories/*/content/read"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName'))]"
      ]
    },
    {
      "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
      "apiVersion": "2025-05-01-preview",
      "name": "[format('{0}/{1}', parameters('containerRegistryName'), '_repositories_pull_metadata_read')]",
      "properties": {
        "description": "Can perform all read operations on the registry",
        "actions": [
          "repositories/*/content/read",
          "repositories/*/metadata/read"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName'))]"
      ]
    },
    {
      "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
      "apiVersion": "2025-05-01-preview",
      "name": "[format('{0}/{1}', parameters('containerRegistryName'), '_repositories_push')]",
      "properties": {
        "description": "Can push to any repository of the registry",
        "actions": [
          "repositories/*/content/read",
          "repositories/*/content/write"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName'))]"
      ]
    },
    {
      "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
      "apiVersion": "2025-05-01-preview",
      "name": "[format('{0}/{1}', parameters('containerRegistryName'), '_repositories_push_metadata_write')]",
      "properties": {
        "description": "Can perform all read and write operations on the registry",
        "actions": [
          "repositories/*/metadata/read",
          "repositories/*/metadata/write",
          "repositories/*/content/read",
          "repositories/*/content/write"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName'))]"
      ]
    }
  ]
}